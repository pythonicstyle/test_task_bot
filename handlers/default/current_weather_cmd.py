import requests
from aiogram import types
from datetime import datetime
from aiogram.dispatcher.filters import Text

from loader import dp
from config.config import WEATHER_API_KEY


@dp.message_handler(Text(equals="check current weather"))
async def check_weather_command(message: types.Message) -> None:
    await message.answer(text="–û—Ç–ª–∏—á–Ω–æ!\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É, –≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞")


@dp.message_handler(content_types=["text"])
async def actual_weather(message: types.Message) -> None:
    if message.text.isalpha():
        response = requests.get(url=f'https://api.openweathermap.org/data/2.5/weather?q={message.text.lower()}'
                                    f'&appid={WEATHER_API_KEY}&units=metric', )
        try:
            data = response.json()

            city = data["name"]
            country = data["sys"]["country"]

            temperature = data["main"]["temp"]
            feels_like = data["main"]["feels_like"]
            precipitations = data["weather"][0]["description"]
            pressure = data["main"]["pressure"]
            visibility = data["visibility"]
            humidity = data["main"]["humidity"]
            wind_speed = data["wind"]["speed"]
            wind_direction = data["wind"]["deg"]
            sunrise_timestamp = datetime.fromtimestamp(data["sys"]["sunrise"])
            sunset_timestamp = datetime.fromtimestamp(data["sys"]["sunset"])

            await message.reply(
                f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: <b>{city}, {country}</b>\n"
                f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature} C¬∞ | –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {feels_like} C¬∞\n"
                f"–í–µ—Ç–µ—Ä: {wind_direction}¬∞ | {wind_speed} –º/—Å\n"
                f"–û—Å–∞–¥–∫–∏: {precipitations} | –í–∏–¥–∏–º–æ—Å—Ç—å: {visibility} –º\n"
                f"–í–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞: {humidity} % | –î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –º–º.—Ä—Ç.—Å—Ç\n"
                f"–í–æ—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞: {sunrise_timestamp}\n"
                f"–ó–∞–∫–∞—Ç —Å–æ–ª–Ω—Ü–∞: {sunset_timestamp}\n"
            )

        except Exception:
            await message.answer("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É üò¢")
    else:
        await message.answer(f"–ü–æ –∑–∞–ø—Ä–æ—Å—É '{message.text}' –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
